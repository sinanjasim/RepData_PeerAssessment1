Activity <- read.csv ("~/Desktop/RepData_PeerAssessment1/Activity.csv")
head(Activity)
View(Activity)
Mean <- mean(Activity[,3])
Mean
install.packages("gstat")
library(gstat)
hist(Activity$steps)
data <- aggregate(steps ~ date, data=rawdata, sum, na.rm = TRUE)
data <- aggregate(steps ~ date, data=Activity, sum, na.rm = TRUE)
data
hist(data$steps)
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
Activity <- read.csv ("~/Desktop/RepData_PeerAssessment1/Activity.csv")
head(Activity)
str(Activity)
```
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
hist(daily$steps,breaks = 15, main = "The Histogram of Daily Steps", xlab = "Number of steps", col = "red")
Mean <- mean(Activity$steps, na.rm = TRUE)
print(paste("The mean of daily activity is", Mean))
Median <- median(Activity$steps, na.rm = TRUE)
print(paste("The median of daily activity is", Median))
Mean <- mean(daily)
Mean <- mean(daily, na.rm = TRUE)
View(daily)
Mean <- mean(daily$steps, na.rm = TRUE)
print(paste("The mean of daily activity is", Mean))
print(paste("The mean of daily activity is", round(Mean, 3)))
Median <- median(daily$steps, na.rm = TRUE)
print(paste("The median of daily activity is", Median))
Median
Mean <- mean(daily$steps)
print(paste("The mean of daily activity is", round(Mean, 3)))
Median <- median(daily$steps)
print(paste("The median of daily activity is", Median))
daily
Activity
head(Activity)
steps.per.interval <- daily <- aggregate(steps ~ interval, data = Activity, Mean, na.rm = TRUE)
steps.per.interval <- daily <- aggregate(steps ~ interval, data = Activity, mean, na.rm = TRUE)
View(steps.per.interval)
library(ggplot2)
steps.per.interval <- daily <- aggregate(steps ~ interval, data = Activity, mean, na.rm = TRUE)
ggplot(data=steps.per.interval, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
steps.per.interval[which.max(steps.per.interval),]
steps.per.interval[which.max(steps.per.interval$steps),]
steps.per.interval[which.max(steps.per.interval$steps),]
sum_of_na <- sum (Activity[is.na(Activity$steps),])
sum_of_na <- sum (is.na(Activity$steps))
sum_of_na
sum_of_na/length(Activity)
sum_of_na/length(Activity$steps)
sum_of_na/length(Activity$steps)    # the percentage of NA to the total data
fill.value <- function(steps, interval) {
fill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily[daily$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
filled <- (daily$steps)
fill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily$steps)
return(filled)
}
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
View(filled.data)
View(daily)
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
View(daily)
Activity <- read.csv ("~/Desktop/RepData_PeerAssessment1/Activity.csv")
head(Activity)
str(Activity)
```
#### Ploting the Histogram of the steps
Plotting the histogram of the daily steps using the base plot system.
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
hist(daily$steps,breaks = 15, main = "The Histogram of Daily Steps", xlab = "Number of steps", col = "red")
Mean <- mean(daily$steps)
print(paste("The mean of daily activity is", round(Mean, 3)))
Median <- median(daily$steps)
print(paste("The median of daily activity is", Median))
library(ggplot2)
steps.per.interval <- aggregate(steps ~ interval, data = Activity, mean, na.rm = TRUE)
ggplot(data=steps.per.interval, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
steps.per.interval[which.max(steps.per.interval$steps),]
sum_of_na <- sum (is.na(Activity$steps))
sum_of_na/length(Activity$steps)    # the percentage of NA to the total data
ill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily[daily$date==date, "steps"])
return(filled)
}
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$date)
View(filled.data)
rm (list = ls())
Activity <- read.csv ("~/Desktop/RepData_PeerAssessment1/Activity.csv")
head(Activity)
str(Activity)
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
hist(daily$steps,breaks = 15, main = "The Histogram of Daily Steps", xlab = "Number of steps", col = "red")
Mean <- mean(daily$steps)
print(paste("The mean of daily activity is", round(Mean, 3)))
Median <- median(daily$steps)
print(paste("The median of daily activity is", Median))
library(ggplot2)
steps.per.interval <- aggregate(steps ~ interval, data = Activity, mean, na.rm = TRUE)
ggplot(data=steps.per.interval, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
steps.per.interval[which.max(steps.per.interval$steps),]
sum_of_na <- sum (is.na(Activity$steps))
sum_of_na/length(Activity$steps)    # the percentage of NA to the total data
fill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily[daily$date==date, "steps"])
return(filled)
}
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$date)
View(filled.data)
View(daily)
str(daily)
fill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- c(daily[daily$date==date, "steps"])
return(filled)
}
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$date)
View(filled.data)
fill.value <- function(steps, date) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (daily[daily$date==date, steps])
return(filled)
}
filled.data <- Activity
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$date)
View(filled.data)
filled.data
head(filled.data)
head(daily)
View(daily)
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
View(daily)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (steps.per.interval[steps.per.interval$interval==interval, "steps"])
return(filled)
}
filled.NA<- Activity
filled.NA$steps <- mapply(fill.value, filled.NA$steps, filled.NA$interval)
View(filled.NA)
filled.daily <- aggregate(steps ~ date, data = filled.NA, sum, na.rm = TRUE)
filled.mean <- mean(filled.daily)
filled.mean <- mean(filled.daily$steps)
filled.median <- median(filled.daily$steps)
print(paste("The mean of the original data is", Mean, "and the mean of the data after filling the NA is", filled.mean))
print(paste("The mean of the original data is",round(Mean, 3), "and the mean of the data after filling the NA is",round(filled.mean, 3)))
View(filled.daily)
View(daily)
print(paste("The mean of the original data is",round(Mean, 5), "and the mean of the data after filling the NA is",round(filled.mean, 5)))
print(paste("The median of the original data is",median, "and the median of the data after filling the NA is",filled.median)
)
print(paste("The median of the original data is",median, "and the median of the data after filling the NA is",filled.median))
print(paste("The median of the original data is",Median, "and the median of the data after filling the NA is",filled.median))
print(paste("The median of the original data is",Median, "and the median of the data after filling the NA is",round(filled.median,5 )))
hist(filled.daily$steps,breaks = 15, main = "The Histogram of Daily Steps filled NA", xlab = "Number of steps", col = "red")
Activity <- read.csv ("~/Desktop/RepData_PeerAssessment1/Activity.csv")
head(Activity)
str(Activity)
daily <- aggregate(steps ~ date, data = Activity, sum, na.rm = TRUE)
hist(daily$steps,breaks = 15, main = "The Histogram of Daily Steps", xlab = "Number of steps", col = "red")
Mean <- mean(daily$steps)
print(paste("The mean of daily activity is", round(Mean, 3)))
Median <- median(daily$steps)
print(paste("The median of daily activity is", Median))
library(ggplot2)
steps.per.interval <- aggregate(steps ~ interval, data = Activity, mean, na.rm = TRUE)
ggplot(data=steps.per.interval, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
steps.per.interval[which.max(steps.per.interval$steps),]
sum_of_na <- sum (is.na(Activity$steps))
sum_of_na/length(Activity$steps)    # the percentage of NA to the total data
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (steps.per.interval[steps.per.interval$interval==interval, "steps"])
return(filled)
}
filled.NA<- Activity
filled.NA$steps <- mapply(fill.value, filled.NA$steps, filled.NA$interval)
View(filled.NA)
filled.daily <- aggregate(steps ~ date, data = filled.NA, sum, na.rm = TRUE)
filled.mean <- mean(filled.daily$steps)
filled.median <- median(filled.daily$steps)
print(paste("The mean of the original data is",round(Mean, 5), "and the mean of the data after filling the NA is",round(filled.mean, 5)))
print(paste("The median of the original data is",Median, "and the median of the data after filling the NA is",round(filled.median,5 )))
hist(filled.daily$steps,breaks = 15, main = "The Histogram of Daily Steps filled NA", xlab = "Number of steps", col = "red")
Weekday <- weekdays(Activity)
Weekday <- Activity[weekdays(Activity$date),]
str(Activity)
Activity$date <- as.Date(Activity$date, "%Y-%m-%d")
str(Activity)
Weekday <- Activity[weekdays(Activity$date),]
head(Weekday)
Weekday <- weekdays(Activity$date)
Weekday
Weekday <- Activity[weekdays(Activity$date)]
Weekday <- Activity[weekdays(Activity$date),]
View(Weekday)
days <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
}
filled.NA$date <- as.Date(filled.NA$date)
filled.NA$day <- sapply(filled.NA$date, FUN=days)
View(filled.NA)
steps.per.interval.filled <- aggregate(steps ~ interval, data = filled.NA, sum, na.rm = TRUE)
steps.per.interval.filled
steps.per.interval.filled <- aggregate(steps ~ interval+day, data = filled.NA, sum, na.rm = TRUE)
steps.per.interval.filled
ggplot(aes(steps.per.interval.filled, interval, steps)) + geom_line()+ facet_grid(day~.)
ggplot(steps.per.interval.filled, aes(interval, steps)) + geom_line()+ facet_grid(day~.)
ggplot(steps.per.interval.filled, aes(interval, steps)) + geom_line()+ facet_grid(day~.)+ xlab( Intervals)+ ylab(Number of Steps)
ggplot(steps.per.interval.filled, aes(interval, steps)) + geom_line()+ facet_grid(day~.)+ xlab("Intervals")+ ylab("Number of Steps")
